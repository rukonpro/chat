generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String?
  bio       String?
  profilePic String?
  isOnline  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sentRequests     FriendRequest[] @relation("SentRequests")
  receivedRequests FriendRequest[] @relation("ReceivedRequests")
  messagesSent     Message[]       @relation("SentMessages")
  messagesReceived Message[]       @relation("ReceivedMessages")
  friendshipsA     Friendship[]    @relation("UserAFriendships")
  friendshipsB     Friendship[]    @relation("UserBFriendships")
}

model Friendship {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userAId   String   @db.ObjectId
  userBId   String   @db.ObjectId
  createdAt DateTime @default(now())
  userA     User     @relation("UserAFriendships", fields: [userAId], references: [id])
  userB     User     @relation("UserBFriendships", fields: [userBId], references: [id])
  @@unique([userAId, userBId])
}

model FriendRequest {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId    String   @db.ObjectId
  receiverId  String   @db.ObjectId
  status      String   @default("pending") // pending, accepted, rejected
  createdAt   DateTime @default(now())
  sender      User     @relation("SentRequests", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedRequests", fields: [receiverId], references: [id])
}

model Message {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId    String   @db.ObjectId
  receiverId  String   @db.ObjectId
  content     String
  createdAt   DateTime @default(now())
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}